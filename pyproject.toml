[tool.poetry]
name = "coding-agent"
version = "0.0.1"
description = "Coding Agent"
authors = ["Jeff Coggshall <alocalminina@gmail.com>"]
readme = "README.md"
packages = [
    { include = "src" }
]

[tool.poetry.dependencies]
anthropic = {version = "*", extras = ["vertex"]}
browser-use = {version = "*", extras = ["memory"]}
db-dtypes = "*"
docker = "*"
fastapi = "*"
gunicorn = "*"
google = "*"
google-genai = "*"
googlemaps = "*"
instructor = "*"
ipykernel = "*"
langchain-google-genai = "*"
markdown = "*"
matplotlib = "*"
notebook = "*"
numpy = "*"
pandas = "*"
python = ">=3.12,<3.14"
python-dotenv = "*"
python-json-logger = "*"
pytest-cov = "*"
ratelimit = "*"
requests = "*"
scikit-learn = "*"
seaborn = "*"
uvicorn = "*"
weasyprint = "*"
ruff = "*"
black = "*"
feedparser = "*"
pypdf = "*"

[tool.poetry.group.dev.dependencies]
mypy = "*"
pytest = "*"
ruff = "*"

[tool.coverage.run]
source = ["src"]

[tool.ruff]
line-length = 120

# Add this new section to exclude specific files or directories
exclude = [
    "__pypackages__",
    "src/DATA/",
    "**/*.ipynb"
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",  # PEP8 naming convetions
    "D"  # pydocstyle
]
ignore = [
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "D401",  # imperative mood
    "D103",
    "D104",
    "D100",
    "D101",
    "N806",
    "N803",
    "E501",
    "D107",
    "D102",
    "D201",
    "D202",
    "D205",
    "B904",
    "B008",
    "E402",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "E712", # == for asserts
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "manual: Run tests that interact with live external APIs (select with '-m manual')"
]

[tool.poetry.scripts]
coding-agent = "src.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
